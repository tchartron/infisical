version: '3.8'

services:
  nginx:
    container_name: infisical-nginx
    image: nginx:${NGINX_VERSION:-latest}
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.secrets_http_router.rule=Host(`secrets.${DOMAIN:-tchartron.com}`)
      - traefik.http.routers.secrets_http_router.entrypoints=http
      - traefik.http.routers.secrets_http_router.middlewares=https-redirect@file
      - traefik.http.routers.secrets_http_router.service=secrets_http_service
      - traefik.http.services.secrets_http_service.loadbalancer.server.port=80
      - traefik.http.routers.secrets_https_router.rule=Host(`secrets.${DOMAIN:-tchartron.com}`)
      - traefik.http.routers.secrets_https_router.entrypoints=https
      - traefik.http.routers.secrets_https_router.tls=true
      - traefik.http.routers.secrets_https_router.tls.certresolver=letsencrypt
      - traefik.http.routers.secrets_https_router.tls.domains[0].main=secrets.${DOMAIN:-tchartron.com}
      - traefik.http.routers.secrets_https_router.service=secrets_https_service
      - traefik.http.services.secrets_https_service.loadbalancer.server.port=80
    depends_on:
      - frontend
      - backend
    networks:
      - default

  backend:
    container_name: infisical-backend
    restart: unless-stopped
    depends_on:
      - mongo
    image: infisical/backend:${INFISICAL_BACKEND:-latest}
    env_file: .env
    environment:
      - NODE_ENV=production
    networks:
      - default

  frontend:
    container_name: infisical-frontend
    restart: unless-stopped
    depends_on:
      - backend
    image: infisical/frontend:${INFISICAL_FRONTEND:-latest}
    env_file: .env
    environment:
      # - NEXT_PUBLIC_POSTHOG_API_KEY=${POSTHOG_PROJECT_API_KEY}
      - INFISICAL_TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-false}
      # - NEXT_PUBLIC_STRIPE_PRODUCT_PRO=${STRIPE_PRODUCT_PRO}
      # - NEXT_PUBLIC_STRIPE_PRODUCT_TEAM=${STRIPE_PRODUCT_TEAM}
      # - NEXT_PUBLIC_STRIPE_PRODUCT_STARTER=${STRIPE_PRODUCT_STARTER}
    networks:
      - default

  mongo:
    container_name: infisical-mongo
    image: mongo:${MONGO_VERSION:-latest}
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - default

volumes:
  mongo-data:
    name: infisical-mongo-data
    external: true

networks:
  default:
    name: docker_network
    driver: bridge
    external: true
